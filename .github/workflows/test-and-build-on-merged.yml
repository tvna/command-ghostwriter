---
name: Test and Build (main)

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  test-and-build:
    uses: ./.github/workflows/reusable-test-and-build.yml
    with:
      concurrency_group: push-${{ github.workflow }}-${{ github.ref }}
      concurrency_cancel_in_progress: true
      workflow_summary_name: "Workflow summary [Test & Build (main)]"

  create-tag-and-release:
    needs:
      - test-and-build
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.set_tag_output.outputs.tag_name }}
      commit_sha: ${{ steps.get_commit_sha.outputs.sha }}
    permissions:
      contents: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit
          disable-sudo: true
          disable-file-monitoring: true

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1

      - name: Get version from main
        id: get-main-ver
        uses: martinbeentjes/npm-get-version-action@3cf273023a0dda27efcd3164bdfb51908dd46a5b # v1.3.1

      - name: Set ENV variables
        shell: bash
        run: |
          {
            echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}"
            echo "RELEASE_VERSION=${{ steps.get-main-ver.outputs.current-version }}"
          } >> "$GITHUB_ENV"

      - name: Set tag_name output
        id: set_tag_output
        run: echo "tag_name=v${{ steps.get-main-ver.outputs.current-version }}" >> "$GITHUB_OUTPUT"

      - name: Push tag
        run: |
          # Check if tag already exists
          TAG_NAME="v${{ steps.get-main-ver.outputs.current-version }}"

          if ! git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            # Create annotated tag
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
            git push origin "$TAG_NAME"

          else
            echo "Tag $TAG_NAME already exists"
          fi

      - name: Get commit SHA
        id: get_commit_sha
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  upload-artifacts:
    needs:
      - create-tag-and-release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit
          disable-sudo: true
          disable-file-monitoring: true

      - name: Download macOS build artifact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: desktop-app-macOS
          path: artifacts/macos

      - name: Download Windows build artifact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: desktop-app-Windows
          path: artifacts/windows

      - name: Create Release with Artifacts
        id: create_release # Add an ID for potential future use
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Explicitly pass token
        with:
          tag_name: ${{ needs.create-tag-and-release.outputs.tag_name }}
          generate_release_notes: true
          target_commitish: ${{ needs.create-tag-and-release.outputs.commit_sha }}
          files: |
            artifacts/macos/**/*
            artifacts/windows/**/*
          draft: false
          prerelease: false
