name: Create PR to main

on:
  workflow_run:
    workflows: ["Test & Build"]
    types:
      - completed
    branches:
      - develop

jobs:
  create-pr:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'develop'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      - name: Check version change
        id: check-version
        run: |
          # Get the latest commit hash that modified package.json
          latest_commit=$(git log -1 --pretty=format:"%H" -- package.json)

          if [ -z "$latest_commit" ]; then
            echo "No changes to package.json found"
            echo "version_changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Get the version before the change
          old_version=$(git show "$latest_commit^:package.json" | jq -r '.version')

          # Get the current version
          current_version=$(jq -r '.version' package.json)

          if [ "$old_version" != "$current_version" ]; then
            echo "Version changed from $old_version to $current_version"
            echo "version_changed=true" >> "$GITHUB_OUTPUT"
            echo "new_version=$current_version" >> "$GITHUB_OUTPUT"
          else
            echo "Version unchanged"
            echo "version_changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Check if PR already exists
        id: check-pr
        if: steps.check-version.outputs.version_changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_exists=$(gh pr list \
            --head develop \
            --base main \
            --state open \
            --json number \
            --jq length)
          echo "exists=$pr_exists" >> "$GITHUB_OUTPUT"

      - name: Create Pull Request
        if: |
          steps.check-version.outputs.version_changed == 'true' &&
          steps.check-pr.outputs.exists == '0'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the latest commit message from develop
          commit_msg=$(git log -1 --pretty=%B)
          new_version="${{ steps.check-version.outputs.new_version }}"

          # Create PR title
          pr_title="Release v$new_version"

          # Create PR body
          pr_body="Automated PR from develop to main for version $new_version

          This PR was automatically created because:
          1. All tests passed on the develop branch
          2. Package version was updated to v$new_version

          Commit Message:
          \`\`\`
          $commit_msg
          \`\`\`

          ## Changes Overview
          This PR includes all changes that have been tested and verified in the develop branch.

          ## Checks
          - All tests passed
          - Code quality checks passed
          - E2E tests passed
          - Version updated to v$new_version"

          # Create the PR
          gh pr create \
            --base main \
            --head develop \
            --title "$pr_title" \
            --body "$pr_body" \
            --label "automated-pr,release"
