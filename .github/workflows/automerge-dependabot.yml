---
name: Auto-merge for dependabot

on:
  pull_request:
    branches:
      - develop

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  merge:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: read
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
          disable-sudo: true
          disable-file-monitoring: false
          allowed-endpoints: |
            api.github.com:443
            github.com:443

      - name: Dependabot metadata
        id: meta
        uses: dependabot/fetch-metadata@v2.0.0

      - name: Wait for Test & Build workflow
        timeout-minutes: 15
        run: |
          # 最大試行回数を設定
          MAX_ATTEMPTS=30
          ATTEMPT=0

          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            # ワークフローの実行状態を確認
            STATUS=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "/repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/check-runs?check_name=Workflow Summary (Test %26 Build)" \
              --jq '.check_runs[0].conclusion')

            if [ "$STATUS" = "success" ]; then
              echo "Test & Build workflow succeeded"
              exit 0
            elif [ "$STATUS" = "failure" ] || [ "$STATUS" = "cancelled" ]; then
              echo "Test & Build workflow failed or was cancelled"
              exit 1
            fi

            echo "Waiting for Test & Build workflow to complete (attempt $ATTEMPT of $MAX_ATTEMPTS)..."
            ATTEMPT=$((ATTEMPT + 1))
            sleep 30
          done

          echo "Timeout waiting for Test & Build workflow"
          exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve and auto-merge
        if: |
          steps.meta.outputs.package-ecosystem == 'github-actions' ||
          steps.meta.outputs.package-ecosystem == 'pip' ||
          steps.meta.outputs.package-ecosystem == 'npm_and_yarn'
        run: |
          gh pr review "$PR_URL" --approve
          gh pr merge --auto --merge "$PR_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}
