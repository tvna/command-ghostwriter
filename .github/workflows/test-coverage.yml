---
name: Test Coverage

on:
  workflow_run:
    workflows: ["Test & Build"]
    types:
      - completed
    branches:
      - main
      - develop
  schedule:
    # UTC 21:00 -> JST 06:00
    - cron: "00 21 * * 6"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-coverage
  cancel-in-progress: false

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: >-
      github.event.workflow_run.conclusion == 'success' &&
      github.actor == github.repository_owner
    steps:
      - uses: actions/checkout@v4
        with:
          ref: develop
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python-version }}
      - name: Restore cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-python${{ env.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y
        shell: bash
      - name: Update PATH
        run: echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        shell: bash
      - name: Configure poetry
        run: poetry config virtualenvs.in-project false
        shell: bash
      - name: Install dependencies
        shell: bash
        run: |
          poetry install
      - name: Run pytest
        run: |
          poetry run pytest --cov . --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  coverage-main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      python-version: 3.12
    if: >-
      github.event.workflow_run.conclusion == 'success' &&
      github.actor == github.repository_owner
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python-version }}
      - name: Restore cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-python${{ env.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y
        shell: bash
      - name: Update PATH
        run: echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        shell: bash
      - name: Configure poetry
        run: poetry config virtualenvs.in-project false
        shell: bash
      - name: Install dependencies
        shell: bash
        run: |
          poetry install
      - name: Run pytest
        run: |
          poetry run pytest --cov . --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Setup Code Climate
        uses: remarkablemark/setup-codeclimate@v2
      - name: Upload coverage reports to code climate
        run: |
          cc-test-reporter before-build

          cc-test-reporter after-build --exit-code $?
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_TEST_REPORTER_ID }}
