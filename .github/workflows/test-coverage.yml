---
name: Test Coverage

on:
  workflow_run:
    workflows: ["Test & Build"]
    types:
      - completed
    branches:
      - main
      - develop
  schedule:
    # UTC 21:00 -> JST 06:00
    - cron: "00 21 * * 6"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-coverage
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      python-version: 3.12
    if: >-
      github.event.workflow_run.conclusion == 'success' &&
      github.actor == github.repository_owner
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Check out Git repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Setup Python
        uses: actions/setup-python@19e4675e06535f6b54e894da5c1f044400bb4996 # v5.0.0
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache poetry dependencies
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install

      - name: Run pytest
        run: |
          poetry run pytest --cov=app.py --cov=features --cov=i18n --cov=scripts --cov-report=xml --cov-report=term -n 2 --dist loadfile --durations=10 --cache-clear --maxfail=5 --verbose -k "not e2e"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  coverage-main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      python-version: 3.12
    if: >-
      github.event.workflow_run.conclusion == 'success' &&
      github.actor == github.repository_owner
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Check out Git repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Setup Python
        uses: actions/setup-python@19e4675e06535f6b54e894da5c1f044400bb4996 # v5.0.0
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache poetry dependencies
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install

      - name: Run pytest (coverage without e2e)
        run: |
          poetry run pytest -n auto --cov=app.py --cov=features --cov=i18n --cov=scripts --cov-report=xml --cov-report=term --dist loadfile -k "not e2e" --benchmark-disable

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Setup Code Climate
        uses: remarkablemark/setup-codeclimate@6bb7c044fb5ac0c0ed1a34b5f68b3d60aca1bf18 # v2.0.12

      - name: Upload coverage reports to code climate
        run: |
          cc-test-reporter before-build

          cc-test-reporter after-build --exit-code $?
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_TEST_REPORTER_ID }}
