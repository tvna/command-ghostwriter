name: Test & Build
on:
  push:
    branches:
      - develop
    paths-ignore:
      - .devcontainer
      - README.md
      - command_ghostwriter.code-workspace
  pull_request:
    branches:
      - develop
defaults:
  run:
    shell: bash
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test-develop:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.12
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y
        shell: bash
      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
        shell: bash
      - name: Configure poetry
        run: poetry config virtualenvs.in-project false
        shell: bash
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-python${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        shell: bash
        run: |
          poetry install
      - name: Cache playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pytest-playwright-${{ hashFiles('**/poetry.lock') }}
      - name: Install Playwright Browsers
        run: |
          poetry run playwright install
      - name: Run mypy
        run: |
          poetry run mypy . --exclude build
      - name: Run pytest
        run: |
          poetry run pytest --cov . --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.4.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  coverage:
    name: coverage
    needs:
      - test-develop
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install -g yarn
      - run: yarn install
      - run: yarn build
      - uses: paambaati/codeclimate-action@v6.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_TEST_REPORTER_ID }}
        with:
          coverageCommand: yarn coverage
  build:
    runs-on: ${{ matrix.os }}
    needs:
      - test-develop
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache node-electron dependecies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-electron-${{ hashFiles('**/package-lock.json') }}
      - name: Install stlite
        run: |
          npm install
      - name: Dump package
        run: |
          npm run dump
