# Workflow description:
# 1. Run pytest with coverage enabled (excluding E2E tests).
#    - Generates coverage reports in XML and terminal formats.
#    - Generates JUnit XML report.
#    - Runs tests in parallel (`-n auto`).
# 2. Upload the XML coverage report to Codecov using the provided token.
# 3. Set up the Code Climate test reporter.
# 4. If the branch is 'main', upload the coverage report to Code Climate using the provided token.
#
# Usage example:
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       # ... other setup steps
#       - name: Run tests and upload coverage
#         uses: ./.github/actions/test-coverage
#         with:
#           github-branch-name: ${{ github.ref_name }}
#           codecov-token: ${{ secrets.CODECOV_TOKEN }}
#           codeclimate-token: ${{ secrets.CC_TEST_REPORTER_ID }} # Only needed for main branch
---
name: "test-python-coverage"
description: "Test coverage for python"
inputs:
  github-branch-name:
    description: "Checkout branch to test"
    required: true
  codecov-token:
    description: "Codecov token"
    required: true
  codeclimate-token:
    description: "Code Climate token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Run pytest (coverage without e2e)
      shell: bash
      run: |
        cmd_array=(
          poetry run pytest
          --benchmark-disable
          --cov=app.py
          --cov=features
          --cov=i18n
          --cov=scripts
          --cov-report=xml
          --cov-report=term
          --dist loadfile
          --junitxml=junit.xml
          -n auto
          -k "not e2e"
          -o junit_family=legacy
        )
        "${cmd_array[@]}"

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
      with:
        token: ${{ inputs.codecov-token }}

    - name: Setup Code Climate
      uses: remarkablemark/setup-codeclimate@6bb7c044fb5ac0c0ed1a34b5f68b3d60aca1bf18 # v2.0.12

    - name: Upload coverage reports to code climate
      if: inputs.github-branch-name == 'main'
      shell: bash
      run: |
        echo CC_TEST_REPORTER_ID=$"{{ inputs.codeclimate-token }}" >> "$GITHUB_ENV"
        cc-test-reporter before-build
        cc-test-reporter after-build --exit-code $?
