---
description: Domain knowledges for this repo
globs: *.py
alwaysApply: true
---
# このリポジトリにおけるドメイン知識

## パッケージ管理
- pythonにおいては、poetryを利用します
- javascriptにおいては、npmを利用します
- pythonの依存パッケージを新規インストールする場合は、`pip install`ではなく`poetry add`を利用すること
- テストコード専用の依存パッケージを新規インストールする場合は、`poetry add -G dev`を利用すること
- pyproject.tomlにおいては、パッケージモードの有効化を禁止とします
- package.jsonにおいては、常にパッケージモードを利用するものとします
- 頻出するコマンドのエイリアスについては、package.jsonに全て定義します

## フロントエンドの技術選定
- streamlitを利用するWebアプリであること
- Pythonのみのコード知識で保守できるよう、可能な限り独自のJavascript実装を作らないこと
- 画面に表示する文字列は可能な限り各ファイルにハードコードせず、`i18n.py`に記述してからインポートして利用すること

## 型バリデーションの条件
- BytesIOにおいては、30MBを上限とします
- 再起的構造を検査する静的解析は禁止、ランタイム処理で例外等を使い検査するものとします。
- テンプレートインジェクション対策の静的解析は、テンプレートファイルに対する、禁止タグ、禁止属性、禁止オブジェクトの有無のみ対象とする
- テンプレートインジェクション対策の他の検査は、ランタイム処理で例外等を使い検査すること

## featuresの取り扱い
- featuresフォルダ内のPythonファイルは、インポートの利便性を考慮してクラス化を徹底すること
- DocumentRenderが引数として受け取るcontextは、tomlをパースした結果を想定すること
- DocumentRenderのフォーマット処理はビジネスロジックであるため、勝手に修正したり破壊したりしないこと
- DocumentRenderのフォーマットは、サンドボックスを活用してセキュリティ対策を行うこと
- 利用するテンプレートファイルにおけるマクロ利用は禁止を前提とすること
- 独自の例外は、共通のプレフィックスを意識すること