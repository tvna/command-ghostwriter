---
description: Rules for GitHub Actions workflow
globs: **/.github/workflows/*.{yml,yaml}
alwaysApply: false
---
# GitHub Actions チェック

## 概要
GitHub Actions ワークフローファイルのベストプラクティスとセキュリティチェックを行います。

## ルール

### トップレベルキーのチェック
- ワークフローファイルに必要なトップレベルキー（name, on, jobs）が欠けている場合、エラーを出します。

### バージョン固定チェック
- アクションは 'main' や 'master' のようなブランチ名ではなく、固定バージョン（例: v2）を使用するべきです。
- より安定性のために、メジャーバージョンのみ（例: v2）を使用することを検討してください。

### ジョブのタイムアウト設定
- ジョブのタイムアウトを設定することを検討してください。これにより、ワークフローがハングするのを防げます。

### コマンドインジェクション脆弱性チェック
- コマンドインジェクションの脆弱性の可能性があります。runコマンド内の ${{ github.event.* }} 値に適切なエスケープを使用してください。

### サードパーティアクションの使用チェック
- 使用中のサードパーティアクションが多い場合、セキュリティ上の懸念を確認してください。
- 使用中のサードパーティアクションが信頼できるものであることを確認してください。

### pull_requestトリガーの制限
- pull_requestトリガーはセキュリティのために特定のブランチに制限されるべきです。

### write permissionsの使用
- 過剰な権限が付与されています。write-allの代わりにより制限された権限を使用してください。

### 環境変数の管理
- 環境変数は、GitHub Secretsを使用して安全に管理するべきです。ハードコーディングされた値は避けてください。

### キャッシュの使用
- ビルドや依存関係のキャッシュを使用することで、ワークフローの実行時間を短縮することを検討してください。

### ステップの依存関係
- ステップ間の依存関係を明確にし、必要なステップが完了してから次のステップを実行するようにしてください。

### エラーハンドリング
- 各ステップでエラーハンドリングを行い、失敗した場合に適切なアクションを取るようにしてください。

### リリース管理
- リリースやデプロイメントの際には、タグやリリースノートを使用して、変更内容を明確に記録することを推奨します。

### 定期的なレビュー
- ワークフローの定期的なレビューを行い、不要なアクションや古い設定を削除することを推奨します。